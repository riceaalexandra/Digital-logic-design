--------------------------------------------------------------------------------
-- Copyright (c) 1995-2007 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 9.2.04i
--  \   \         Application : ISE
--  /   /         Filename : tbw2.ant
-- /___/   /\     Timestamp : Sat May 07 17:24:39 2022
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: tbw2
--Device: Xilinx
--

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE STD.TEXTIO.ALL;

ENTITY tbw2 IS
END tbw2;

ARCHITECTURE testbench_arch OF tbw2 IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "D:\laborator_7_partea_comuna\num2\tbw2.ano";

    COMPONENT num2
        PORT (
            iClk : In std_logic;
            iClear : In std_logic;
            iLoad : In std_logic;
            iEnable1 : In std_logic;
            iEnable2 : In std_logic;
            iaData : In std_logic_vector (3 DownTo 0);
            oQ : Out std_logic;
            oaData : Out std_logic_vector (3 DownTo 0)
        );
    END COMPONENT;

    SIGNAL iClk : std_logic := '0';
    SIGNAL iClear : std_logic := '0';
    SIGNAL iLoad : std_logic := '0';
    SIGNAL iEnable1 : std_logic := '0';
    SIGNAL iEnable2 : std_logic := '0';
    SIGNAL iaData : std_logic_vector (3 DownTo 0) := "0000";
    SIGNAL oQ : std_logic := '0';
    SIGNAL oaData : std_logic_vector (3 DownTo 0) := "0000";

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    constant PERIOD : time := 40 ns;
    constant DUTY_CYCLE : real := 0.5;
    constant OFFSET : time := 0 ns;

    BEGIN
        UUT : num2
        PORT MAP (
            iClk => iClk,
            iClear => iClear,
            iLoad => iLoad,
            iEnable1 => iEnable1,
            iEnable2 => iEnable2,
            iaData => iaData,
            oQ => oQ,
            oaData => oaData
        );

        PROCESS    -- clock process for iClk
        BEGIN
            WAIT for OFFSET;
            CLOCK_LOOP : LOOP
                iClk <= '0';
                WAIT FOR (PERIOD - (PERIOD * DUTY_CYCLE));
                iClk <= '1';
                WAIT FOR (PERIOD * DUTY_CYCLE);
            END LOOP CLOCK_LOOP;
        END PROCESS;

        PROCESS    -- Annotation process for iClk
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_oQ(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", oQ, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, oQ);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
            PROCEDURE ANNOTATE_oaData(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", oaData, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, oaData);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_oQ(0);
            ANNOTATE_oaData(0);
            WAIT for OFFSET;
            TX_TIME := TX_TIME + 0;
            ANNO_LOOP : LOOP
                --Rising Edge
                WAIT for 30 ns;
                TX_TIME := TX_TIME + 30;
                ANNOTATE_oQ(TX_TIME);
                ANNOTATE_oaData(TX_TIME);
                WAIT for 10 ns;
                TX_TIME := TX_TIME + 10;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  10ns
                WAIT FOR 10 ns;
                iClear <= '1';
                iEnable1 <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  50ns
                WAIT FOR 40 ns;
                iEnable2 <= '1';
                -- -------------------------------------
                -- -------------  Current Time:  90ns
                WAIT FOR 40 ns;
                iClear <= '0';
                -- -------------------------------------
                -- -------------  Current Time:  970ns
                WAIT FOR 880 ns;
                iEnable1 <= '0';
                -- -------------------------------------
                WAIT FOR 70 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

